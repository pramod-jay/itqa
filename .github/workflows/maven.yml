name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 23
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: maven

    # Step 3: Install required dependencies for Chrome
    - name: Install Chrome dependencies
      run: sudo apt-get update && sudo apt-get install -y wget unzip xvfb libnss3 libgconf-2-4 libxrandr2 libxi6 libasound2 libxtst6 libatk-bridge2.0-0 libgtk-3-0

    # Step 4: Install Google Chrome
    - name: Install Google Chrome
      run: |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -f install -y
        google-chrome --version

    # Step 5: Set up ChromeDriver
    - name: Set up ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | grep -oP "\d+\.\d+\.\d+")
        wget https://storage.googleapis.com/chrome-for-testing-public/131.0.6778.204/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip
        sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
        sudo chmod +x /usr/bin/chromedriver


    # Step 6: Start Xvfb for headless display
    - name: Start Xvfb
      run: |
        Xvfb :99 -ac &
        export DISPLAY=:99

    # Step 7: Build and run tests with Maven
    - name: Build and run tests with Maven
      env:
        DISPLAY: ":99"
        _JAVA_OPTIONS: "-Dwebdriver.chrome.driver=/usr/bin/chromedriver"
      run: mvn clean verify -Dtestng.dtd.http=true -Dwebdriver.chrome.args="--headless --no-sandbox --disable-dev-shm-usage"

    # Generate and Deploy Allure Report
    - name: Deploy Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: target/allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history
    
    # Enable GitHub Pages
    - name: Enable GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: always()
      with:
        personal_token: ${{ secrets.PAT }}  # Instead of GITHUB_TOKEN
        publish_branch: gh-pages
        publish_dir: allure-history

    # Step 8: Update the dependency graph
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
